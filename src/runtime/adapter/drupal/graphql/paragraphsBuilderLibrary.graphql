#import "~/components/Paragraph/fragment.paragraphsFieldItem.graphql";
#import "~/components/Paragraph/fragment.paragraph.graphql";

mutation pbAddReusableParagraph(
  $entityType: EntityType!
  $entityUuid: String!
  $langcode: String
  $libraryItemUuid: String!
  $hostType: String!
  $hostUuid: String!
  $hostFieldName: String!
  $afterUuid: String
) {
  state: paragraphsEditMutationState(
    entityType: $entityType
    entityUuid: $entityUuid
  ) {
    action: add_reusable(
      libraryItemUuid: $libraryItemUuid
      afterUuid: $afterUuid
      hostType: $hostType
      hostUuid: $hostUuid
      hostFieldName: $hostFieldName
    ) {
      ...paragraphsBuilderMutationResult
    }
  }
}

query pbLibraryItems {
  entityQuery(entityType: PARAGRAPHS_LIBRARY_ITEM, limit: 50) {
    items {
      ...paragraphsBuilderLibraryItem
    }
  }
}

fragment paragraphsBuilderLibraryItem on ParagraphsLibraryItem {
  uuid
  label
  paragraphs: paragraphsRawField {
    list {
      ...paragraphsFieldItem
      props: entity {
        ...paragraph
      }
    }
  }
}
